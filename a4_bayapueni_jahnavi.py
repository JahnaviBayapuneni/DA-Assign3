# -*- coding: utf-8 -*-
"""A4-Bayapueni-Jahnavi.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kWcB5JANyIkHeFMg4OsyrH2XNRgHp4pj

## Determining a model for Breast Cancer Data Set

Student Name: Jahnavi Bayapuneni
Mail : jahnavi.lucky67@gmail.com
Student ID: 200394366
"""

from google.colab import drive

drive.mount('/content/gdrive')

cd gdrive

cd My\ Drive

import numpy as np 
import pandas as pd
import os
from matplotlib import pyplot as plt

data= pd.read_csv('assign.csv')

"""## Part A - Determine a proper model 
With this data set, we are predicting values whether the test subject is having breat cancer  or not . Our desired output feature is predicting yes or no(whether the breast cancer is present or not). so we are using classification algorithm as we have only two possible outcomes. 

Using the Scikit Learn algorithm in the flow-chart given in the assignment 4 description, Depending on the data set we have here, i decided to use classification algorithm. The reason for choosing classification algorithm is : In the data set we are using, our target variables are strings not numeric.

Therefore, We need to execute the classification algorithm not the REgression algorithm.
 
 In classification we have many algorithms. I have gone through some algorithms, read about their usage and implemented a few for the dataset i am using. But the KNN algorithm worked really well and is succesful is giving the predicted and expected outputs as how i wanted the outputs to be displayed. 
 
 So, we are using the KNN algorithm for the dataset we are using. 
                                                             
                                                             
   Introduction to KNN :

K Nearest neighbour (KNN) is one of the simplest supervised machine learning algorithm mostly used for classification. It classifies a data point based on how its neighbours are classified. This algorithm stores all the available cases and classifies new cases based on similarity measure. The data point in this algorithm is classified by majority votes from five nearest neighbours.

 When do we use KNN ?

We can use KNN when data is labelled. So we need a label on it . So if you have any complicated data and you have a large amount of it, then probably we are not going to use KNN . KNN works really good if we are small amount of data.

In this model, we are taking the k-value as 5 which means we are observing 5 nearest neighbours from the given data point.
"""

target_features=data["diagnosis"]
input_features = data.drop('diagnosis', axis=1)

input_features = input_features.drop('id', axis=1)
i = len(input_features.columns)

input_features = input_features.drop(input_features.columns[i-1], axis=1)

target_features.replace(('M', 'B'), (1, 0), inplace=True)

"""## Part B - Apply the Algorithm"""

##Implementing the algorithm to establish the model: 
from sklearn.model_selection import train_test_split
input_train, input_test, target_train, target_test = train_test_split(input_features,target_features,test_size=0.33,shuffle=False)
print(input_features.shape)
print(input_train.shape)
print(input_test.shape)
print(target_features.shape)
print(target_train.shape)
print(target_test.shape)

"""### Process involved in applying the model

In the model we are using, we are only giving measurements to the algorithm. So, for this, in order to run the algorithm, we are observing the neighbours of our given data to get the output. 

Suppose let the given data point be x . 
For suppose,the measuement X we have given is surrounded by 2 yes and 3 No. 
Then it will go for an euclidean distance between the neighbouring points A,B,C,D,E(we can choose 5 values as the k-value we have taken here is 5)

Then he euclidean distance is calculated between the given data point and the neighbouring data points that are available i.e. between X-A,X-B,X-C,X-D,X-E

As Euclidean distance is calculated from the given data to 5 nearest values, the one with the less euclidean distance is selected. 

That means, what ever the output of that nearest neighbour will be gievn as output fro the given data i.e. if the output value of nearest neighbour is yes then the output of out given value X is also YES. 


So, this is how the KNN algorithm works. 
The model here also works in the same way. Whenever we have given the data, it follows these steps in order to get an outcome

### How data needs to be prepared in order 

In the data set i am using, i am dividing the data into input variables and target variables to run the model 


For any Machine learning algorithm, the algorithm cannot go through all the data set to process. For this, we divide our data into train set and test set values. For suppose if the data set is considered to be 100% then the train set and test set are divided into 70% and 30% respectively.

So when ever we give the data to the algorithm, it follows these steps.
"""

#IMPORTING KNNCLASIFIER FROM SKLEARN
from sklearn.neighbors import KNeighborsClassifier

#IMPORT METRICS TO CALCULATE ACCURACY
from sklearn import metrics
model= KNeighborsClassifier(n_neighbors=5)
model.fit(input_train,target_train)
target_predict=model.predict(input_test) # end of part b 
accuracy=metrics.accuracy_score(target_test,target_predict)   # part c 
print("ACCURACY:",accuracy*100)

"""From above, the accuracy of KNN algorithm for this Data Set is 93.6"""

#CREATING DATA FRAME BY CONCATENATIING TEST AND PREDICT VALUES
target_test_predict=pd.DataFrame()
target_test_predict['Test']=target_test
target_test_predict['Predict']=target_predict
print(target_test_predict.shape)

"""## Part C - Visualize and Explain your model

From the model craeted, we are using the Classification algorithm here. As we can see, we can visualize the output following and using the classification algorithm - KNN

**Labeling importing aspects in visualization :**

In the visulaization we have ACTUAL TEST VALUES AND PREDICTED VALUES where blue line indiactes actual test value and red line indicates predicted values. 


**Explain your plot in detail and what the plot means :**


Here, we predicted the test data on the model based on the tarined data. The 70% of the data is used for building the data and the remaining 30% is used to predict the data. 

THe graph is 30% we predicted and comparing those predicted values with the actual values we have. 



As we are using a classification algorithm for the data set i have taken, the fourth part in part c is not valid in this case.
"""

#ASSIGNMENT 4-PART C "VISUALIZE"
#VISUALIZING TEST AND PREDICT AND OBSERVING THE RESULTS
#MOST OF THE POINTS ARE OVERLAPPING
plt.rcParams["figure.figsize"] = [16,9]
plt.plot(target_test_predict['Test'],label="ACTUAL TEST VALUE")
plt.plot(target_test_predict['Predict'],label="PREDICTED VALUES")
plt.legend(loc="upper right")
plt.show()

"""## Part D - Discussion 


**Does the model have power to predict the outcome:** 

As we have seen the code above, we got an output of value for the accuracy of the model we are using. It is given that the accuracy is 93.6 for the choosen model. That means even if we have placed any unknown data or feature ,  the model can predict the outcome of whether they have breast cancer or no with 93% accuarate rate. 

From this, the model proves that it has the power to predict the outcome of future instances.

## Part E - Summary 

**What was the goal , what were your results ?**

I started with the problem statement of predicting the breast cancer with the taken data set. In machine learning, we have various models but for this perticular data set, we used KNN classification algorithm as it is succesful in delivering the final outcome of predicting the breast cancer( Either yes or No)

For this i have also tried of using  a decision tree but it is not so accuate in predicting the output as KNN classification algorithm. All the problems addressed in the above model are solved by using the KNN algorithm. Mostly, regardless of all the available features, predicting the breast cancer is the most important feature. And the KNN classification algorithm for this data set is proven that it has an accuracy of 93% which makes the algorithm work really good for the taken data set.And with this, i have achieved the goal of predicting breast cancer with the use of KNN classifier algorithm .

**Reflect on whether some other analysis would have been better for this data **

For the data set we have which consists of 560 rows and 30 columns, i have tried the possible algothms but none of them worked really well for the output in the way we are expecting. So, i am sure that KNN algorithm was the best in the scenario. 



**What sort of new knowleadge we achieved? **


As being a beginner in the field of Data science, i started with the small data. But it really helped me in applying the theorical knowleadge in practical. It really makes me feel great as we are taking some unused, raw data and coming up with some new results that can allow us to help people and predict the chances in future.

### References 



[1] UCI Machine Learning (2016). Breast Cancer Wisconsin (Diagnostic) Data Set. [online] Kaggle.com. Available at: https://www.kaggle.com/uciml/breast-cancer-wisconsin-data#data.csv [Accessed 21 Aug. 2019].

â€Œ
"""

from sklearn.metrics import confusion_matrix 
from sklearn.metrics import accuracy_score 
from sklearn.metrics import classification_report 

results=confusion_matrix(target_test,target_predict)
print ("Confusion Matrix :")
print(results) 
print ("Accuracy Score :",accuracy_score(target_test,target_predict) )
print ("Report : ")
print(classification_report(target_test,target_predict) )